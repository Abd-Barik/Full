# Generated by Django 5.1.9 on 2025-09-24 09:18

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Branch",
            fields=[
                ("branch_uid", models.UUIDField(db_column="branch_uid")),
                (
                    "branch_rno",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("registerno", models.CharField(blank=True, max_length=100, null=True)),
                ("branchname", models.CharField(max_length=255)),
                (
                    "branchcompany",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("tel1", models.CharField(blank=True, max_length=20, null=True)),
                ("tel2", models.CharField(blank=True, max_length=20, null=True)),
                ("fax1", models.CharField(blank=True, max_length=20, null=True)),
                ("fax2", models.CharField(blank=True, max_length=20, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("website", models.URLField(blank=True, null=True)),
                ("address1", models.CharField(blank=True, max_length=255, null=True)),
                ("address2", models.CharField(blank=True, max_length=255, null=True)),
                ("address3", models.CharField(blank=True, max_length=255, null=True)),
                ("cityname", models.CharField(blank=True, max_length=100, null=True)),
                ("zipcode", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "personincharge",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("createdby", models.CharField(blank=True, max_length=100, null=True)),
                ("createon", models.DateTimeField(blank=True, null=True)),
                ("createdon", models.DateTimeField(blank=True, null=True)),
                ("modifiedby", models.CharField(blank=True, max_length=100, null=True)),
                ("modifyon", models.DateTimeField(blank=True, null=True)),
                ("modifiedon", models.DateTimeField(blank=True, null=True)),
                ("editable", models.BooleanField(default=True)),
                ("isforeignermarkup", models.BooleanField(default=False)),
                (
                    "foreignermarkup",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "foreignermarkuptype",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "defaultconsultation_local",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "defaultconsultation_foreigner",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "defaultconsultation_fitemrno",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "basepricepercent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "subprice",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("istaxinclusive", models.BooleanField(default=False)),
                (
                    "creditcard_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "debitcard_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "ReportTemplatePath",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("letterhead", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "attachmentpath",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("logo", models.CharField(blank=True, max_length=500, null=True)),
                ("image", models.CharField(blank=True, max_length=500, null=True)),
                ("imagepath", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "costingmethod",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "roundformula",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "numberingserver",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("numberingserverport", models.IntegerField(blank=True, null=True)),
                ("roundbyitem", models.BooleanField(default=False)),
                ("roundbybillgroup", models.BooleanField(default=False)),
                ("roundbytotal", models.BooleanField(default=False)),
                ("isgetlastdoctor", models.BooleanField(default=False)),
                (
                    "smtp_from_addr",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "smtp_from_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("smtp_host", models.CharField(blank=True, max_length=255, null=True)),
                ("smtp_port", models.IntegerField(blank=True, null=True)),
                (
                    "smtp_username",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "smtp_password",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("regpasswordcheck", models.BooleanField(default=False)),
                ("startdate", models.DateField(blank=True, null=True)),
                ("enddate", models.DateField(blank=True, null=True)),
                ("renewdate", models.DateField(blank=True, null=True)),
                ("islocked", models.BooleanField(default=False)),
                (
                    "operatingtime",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "pointperdollar",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("pointvalidperiod", models.IntegerField(blank=True, null=True)),
                (
                    "dollarperpoint",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("isPharmacy", models.BooleanField(default=False)),
                ("isICvisible", models.BooleanField(default=False)),
                ("isDentalSys", models.BooleanField(default=False)),
                ("isAesthetic", models.BooleanField(default=False)),
                ("isPhysio", models.BooleanField(default=False)),
                ("isMarketingItem", models.BooleanField(default=False)),
                ("isPrescriptioncheck", models.BooleanField(default=False)),
                ("isCollectPaymentchecking", models.BooleanField(default=False)),
                ("openprintTab", models.BooleanField(default=False)),
                ("immdeductstock", models.BooleanField(default=False)),
                ("druglabelwithletterhead", models.BooleanField(default=False)),
                ("notallowdspblwstock", models.BooleanField(default=False)),
                ("showsufficientstockonly", models.BooleanField(default=False)),
                ("usepasscode", models.BooleanField(default=False)),
                ("grantaccess_cn", models.BooleanField(default=False)),
                (
                    "gcalendarembeded",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "calendartype",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "calendarcolorevent",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("footremark1", models.TextField(blank=True, null=True)),
                ("footremark2", models.TextField(blank=True, null=True)),
                ("footremark3", models.TextField(blank=True, null=True)),
                ("clinicname", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "longitude_from",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=10, null=True
                    ),
                ),
                (
                    "longitude_to",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=10, null=True
                    ),
                ),
                (
                    "latitude_from",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=10, null=True
                    ),
                ),
                (
                    "latitude_to",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=10, null=True
                    ),
                ),
                (
                    "employer_epf",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "employee_epf",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("SUBPERIOD", models.CharField(blank=True, max_length=50, null=True)),
                ("TIN", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "BusinessRegNo",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("SSTRegNo", models.CharField(blank=True, max_length=100, null=True)),
                ("MSIC", models.CharField(blank=True, max_length=50, null=True)),
                ("tariffcode", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "eClassficationType",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "IdentificationCategory",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("agoraAPPID", models.CharField(blank=True, max_length=100, null=True)),
                ("client_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "client_secret",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("eInvoiceURL", models.URLField(blank=True, null=True)),
                ("eInvoiceStartDate", models.DateField(blank=True, null=True)),
                ("citem_rno", models.CharField(blank=True, max_length=50, null=True)),
                ("citemname", models.CharField(blank=True, max_length=255, null=True)),
                ("citemno", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "db_table": "[Inventory].[branch]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                ("customer_uid", models.UUIDField(db_column="customer_uid")),
                (
                    "customer_rno",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("customerno", models.CharField(blank=True, max_length=50, null=True)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "inv_address1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "inv_address2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("phone1", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "inv_address3",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "inv_attention",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "do_address1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "do_address2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "do_address3",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "do_attention",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("website", models.CharField(blank=True, max_length=255, null=True)),
                ("phone2", models.CharField(blank=True, max_length=50, null=True)),
                ("fax", models.CharField(blank=True, max_length=50, null=True)),
                ("creditterms", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "creditlimit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "target",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "discountcategory",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "currencycode",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "currencysymbol",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "currencyword",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "customertype_rno",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "customergrp_rno",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("isGSTCustomer", models.BooleanField(default=False)),
                ("accountstatus", models.BooleanField(default=False)),
                ("bankacno", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "invdiscount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "provisiondiscount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("createdby", models.CharField(blank=True, max_length=100, null=True)),
                ("createon", models.DateTimeField(blank=True, null=True)),
                ("modifiedby", models.CharField(blank=True, max_length=100, null=True)),
                ("modifyon", models.DateTimeField(blank=True, null=True)),
                ("remark", models.TextField(blank=True, null=True)),
                ("icno", models.CharField(blank=True, max_length=20, null=True)),
                ("gender", models.CharField(blank=True, max_length=10, null=True)),
                ("mobileno1", models.CharField(blank=True, max_length=20, null=True)),
                ("mobileno2", models.CharField(blank=True, max_length=20, null=True)),
                ("medical_G6PD", models.BooleanField(default=False)),
                ("medical_healthhistory", models.TextField(blank=True, null=True)),
                ("medical_allergynote", models.TextField(blank=True, null=True)),
                ("photo", models.TextField(blank=True, null=True)),
                ("title", models.CharField(blank=True, max_length=20, null=True)),
                ("patient_dateofbirth", models.DateTimeField(blank=True, null=True)),
                ("patient_died", models.BooleanField(default=False)),
                ("patient_diedat", models.DateTimeField(blank=True, null=True)),
                (
                    "patient_race",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "patient_occupation",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "patient_religion",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "patient_maritalstatus",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "patient_language",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "patient_ethnic",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "patient_spousename",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("patient_issmoking", models.BooleanField(default=False)),
                (
                    "patient_referralby",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "patient_yearofmarried",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "patient_noofchildren",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "patient_emergcontact",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "patient_emergtel",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "patient_emergrelationship",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "patient_spouseoccup",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "patient_corpbilltype",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "corp_employmentno",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "corp_department",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "attachfolder",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "panelcomp_rno",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("opendate", models.DateTimeField(blank=True, null=True)),
                ("isforeigner", models.BooleanField(default=False)),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "patient_postcode",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "patient_fathername",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "patient_fatheric",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "patient_fatherrace",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "patient_fatherreligion",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "patient_mothername",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "patient_motheric",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "patient_motherrace",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "patient_motherreligion",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "reviewperiod",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("branch_uid", models.CharField(blank=True, max_length=50, null=True)),
                ("last4DIC", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "membershipno",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("patient_age", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "stkitempricescheme",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "svritempricescheme",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("birthmonth", models.CharField(blank=True, max_length=50, null=True)),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "patient_spouseicno",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "patient_spousecontact",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "next2kin_rno",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "next2kin_relationship",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "next2kin_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "customersourcename",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("othentryno", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "woman_gravida",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("woman_para", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "woman_abortion",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "woman_lifechild",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "woman_dealthchild",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("woman_lastchildbirth", models.DateTimeField(blank=True, null=True)),
                (
                    "woman_menstrualstart",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "woman_totalmenstrualdays",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "woman_menstrualfreqweeks",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "woman_totalmenstrualflow",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("customerTIN", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "customerRegNo",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "customerMSIC",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("customerSST", models.CharField(blank=True, max_length=50, null=True)),
                ("pcompany_no", models.CharField(blank=True, max_length=50, null=True)),
                ("cityname", models.CharField(blank=True, max_length=100, null=True)),
                ("statecode", models.CharField(blank=True, max_length=10, null=True)),
                ("statename", models.CharField(blank=True, max_length=100, null=True)),
                ("countrycode", models.CharField(blank=True, max_length=10, null=True)),
                ("MRN", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "infant_birth_length",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "infant_birth_weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "infant_birth_hc",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("infant_tsh", models.CharField(blank=True, max_length=50, null=True)),
                ("infant_perinatal", models.TextField(blank=True, null=True)),
                (
                    "infant_placeofbirth",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "infant_deliverymode",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("bloodtype", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "IdentificationCategory",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("taxpayer", models.BooleanField(default=False)),
                (
                    "taxpayericno",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("citizenship", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "db_table": "[Inventory].[customers]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerBillingtype",
            fields=[
                ("billtype_rno", models.AutoField(primary_key=True, serialize=False)),
                ("billtype", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "[Clinics].[billtype]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerCitizenship",
            fields=[
                ("country_rno", models.AutoField(primary_key=True, serialize=False)),
                ("country", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Inventory].[country]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerCountry",
            fields=[
                (
                    "code",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("description", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "[EInvoice].[countrycode]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerDiscountLevel",
            fields=[
                ("discat_rno", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.CharField(max_length=255)),
                ("percentage1", models.CharField(max_length=255)),
                ("percentage2", models.CharField(max_length=255)),
                ("percentage3", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Inventory].[discountcategory]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerGroup",
            fields=[
                (
                    "customergrp_rno",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("customergroup", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Inventory].[customergroup]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerLanguage",
            fields=[
                ("language_rno", models.AutoField(primary_key=True, serialize=False)),
                ("language", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[language]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerMaritalStatus",
            fields=[
                (
                    "maritalstatus_rno",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("maritalstatus", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[maritalstatus]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerOccupation",
            fields=[
                ("occupation_rno", models.AutoField(primary_key=True, serialize=False)),
                ("occupation", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[occupation]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerRace",
            fields=[
                ("race_rno", models.AutoField(primary_key=True, serialize=False)),
                ("race", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[race]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerReligion",
            fields=[
                ("religion_rno", models.AutoField(primary_key=True, serialize=False)),
                ("religion", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[religion]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerState",
            fields=[
                (
                    "code",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("state", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "[EInvoice].[statecode]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerTitle",
            fields=[
                ("title_rno", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[title]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerType",
            fields=[
                (
                    "customertype_rno",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("customertype", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Inventory].[customertype]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="department",
            fields=[
                ("department_rno", models.AutoField(primary_key=True, serialize=False)),
                ("department", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[department]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="doctor",
            fields=[
                ("doctor_rno", models.AutoField(primary_key=True, serialize=False)),
                ("doctorname", models.CharField(max_length=255)),
                ("isactive", models.BooleanField(default=True)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[doctors]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "gc_rno",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
            ],
            options={
                "db_table": "[Clinics].[GroupClinicList]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ItemBillGroup",
            fields=[
                ("billgrp_rno", models.AutoField(primary_key=True, serialize=False)),
                ("billgrp_description", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[billing_group]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ItemCategory",
            fields=[
                (
                    "itemcategory_rno",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("category", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Inventory].[itemcategory]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ItemClassification",
            fields=[
                ("code", models.AutoField(primary_key=True, serialize=False)),
                ("description", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "[Einvoice].[classficationcode]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ItemDosage",
            fields=[
                ("dosage_rno", models.AutoField(primary_key=True, serialize=False)),
                ("dosage", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[dosage]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ItemFrequency",
            fields=[
                ("fre_rno", models.AutoField(primary_key=True, serialize=False)),
                ("frequency", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[frequency]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ItemGroup",
            fields=[
                ("itemgrp_rno", models.AutoField(primary_key=True, serialize=False)),
                ("itemgroup", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Inventory].[itemgroup]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ItemIndication",
            fields=[
                ("indicate_rno", models.AutoField(primary_key=True, serialize=False)),
                ("indication", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[indication]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ItemInstruction",
            fields=[
                ("instruct_rno", models.AutoField(primary_key=True, serialize=False)),
                ("instruction", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[instruction]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ItemPrecaution",
            fields=[
                ("pre_rno", models.AutoField(primary_key=True, serialize=False)),
                ("precaution", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[precaution]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ItemSupplier",
            fields=[
                ("supplier_rno", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Inventory].[suppliers]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ItemTax",
            fields=[
                ("svrtaxcode", models.AutoField(primary_key=True, serialize=False)),
                ("description", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "[dbo].[servicetax]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ItemType",
            fields=[
                ("itemtype_rno", models.AutoField(primary_key=True, serialize=False)),
                ("itemtype", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Inventory].[itemtype]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ItemUOM",
            fields=[
                ("unit_rno", models.AutoField(primary_key=True, serialize=False)),
                ("unit", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Inventory].[unit]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Panelcompany",
            fields=[
                ("panelcomp_rno", models.AutoField(primary_key=True, serialize=False)),
                ("pcompanyname", models.CharField(max_length=255)),
                ("privatebranch_rno", models.IntegerField(blank=True, null=True)),
                ("panelcomp_uid", models.UUIDField(db_column="panelcomp_uid")),
                ("pcompany_no", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "ceilingcharge",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                ("createdby", models.CharField(blank=True, max_length=100, null=True)),
                ("createdon", models.DateTimeField(auto_now_add=True)),
                ("modifiedby", models.CharField(blank=True, max_length=100, null=True)),
                ("modifiedon", models.DateTimeField(auto_now=True)),
                ("corp_typerno", models.IntegerField(blank=True, null=True)),
                ("address1", models.CharField(blank=True, max_length=255, null=True)),
                ("address2", models.CharField(blank=True, max_length=255, null=True)),
                ("address3", models.CharField(blank=True, max_length=255, null=True)),
                ("address4", models.CharField(blank=True, max_length=255, null=True)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                ("town", models.CharField(blank=True, max_length=100, null=True)),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                ("postcode", models.CharField(blank=True, max_length=20, null=True)),
                ("phone1", models.CharField(blank=True, max_length=50, null=True)),
                ("phone2", models.CharField(blank=True, max_length=50, null=True)),
                ("fax1", models.CharField(blank=True, max_length=50, null=True)),
                ("fax2", models.CharField(blank=True, max_length=50, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "contactperson",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "default_ceiling",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "default_consultation",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "invoiceoption1",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "invoiceoption2",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "invoiceoption3",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "invoiceoption4",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("isactive", models.BooleanField(default=True)),
                ("privatepanel", models.BooleanField(default=False)),
                ("ischargectrlbydepartment", models.BooleanField(default=False)),
                (
                    "authorisation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("specialprecaution", models.TextField(blank=True, null=True)),
                ("remark", models.TextField(blank=True, null=True)),
                ("creditterms", models.IntegerField(blank=True, null=True)),
                (
                    "creditlimit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "prescriptionmarkup",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "prescriptionmarkuptype",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "yearlymaxlimit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "monthlymaxlimit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "reporttemplate",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("branch_uid", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "stkitempricescheme",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "svritempricescheme",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("eBillEnabled", models.BooleanField(default=False)),
                ("eBillCorp_rno", models.IntegerField(blank=True, null=True)),
                ("eBillStartDate", models.DateTimeField(blank=True, null=True)),
                ("eBillEndDate", models.DateTimeField(blank=True, null=True)),
                ("eCorp_rno", models.IntegerField(blank=True, null=True)),
                ("centerinvoiceprocess", models.BooleanField(default=False)),
                ("maincompany_rno", models.IntegerField(blank=True, null=True)),
                ("isconsultfeebytime", models.BooleanField(default=False)),
                (
                    "roundformula",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("roundbyitem", models.BooleanField(default=False)),
                ("roundbybillgroup", models.BooleanField(default=False)),
                ("pcompanyTIN", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "pcompanyRegNo",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("pcompanySST", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "pcompanyMSIC",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("isstkitemmarkup", models.BooleanField(default=False)),
                ("issvritemmarkup", models.BooleanField(default=False)),
                (
                    "othersysKeyNo",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("practiceno", models.CharField(blank=True, max_length=50, null=True)),
                ("pricebook_rno", models.IntegerField(blank=True, null=True)),
                ("statecode", models.CharField(blank=True, max_length=20, null=True)),
                ("countrycode", models.CharField(blank=True, max_length=20, null=True)),
                ("statename", models.CharField(blank=True, max_length=100, null=True)),
                ("NoNeedEInvoice", models.BooleanField(default=False)),
                ("isTaxExempt", models.BooleanField(default=False)),
                ("datekeyin", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[panelcompany]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Relationship",
            fields=[
                (
                    "relationship_rno",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("relationship", models.CharField(max_length=255)),
                ("branch_rno", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "[Clinics].[relationship]",
                "managed": False,
            },
        ),
    ]
